name: Build Development

jobs:
  # 1. Fingerprint job to check for existing builds
  fingerprint:
    type: fingerprint
    environment: development

  # 2. Get Android and iOS builds based on fingerprints
  get_android_build:
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.android_fingerprint_hash }}
      profile: development

  get_ios_build:
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.ios_fingerprint_hash }}
      profile: development

  get_ios_simulator_build:
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.ios_fingerprint_hash }}
      profile: development-simulator

  # 3. Build Android app for simulator if no existing build found
  build_android_app:
    type: build
    needs: [get_android_build]
    if: ${{ !needs.get_android_build.outputs.build_id }}
    params:
      platform: android
      profile: development

  # 4. Build iOS app for simulator & device if no existing build found
  build_ios_simulator_app:
    type: build
    needs: [get_ios_build]
    if: ${{ !needs.get_ios_build.outputs.build_id }}
    params:
      platform: ios
      profile: development-simulator

  build_ios_app:
    type: build
    needs: [get_ios_build]
    if: ${{ !needs.get_ios_build.outputs.build_id }}
    params:
      platform: ios
      profile: development

  # 5. Notify Slack about failures
  notify_failures:
    after:
      [
        fingerprint,
        get_android_build,
        get_ios_build,
        get_ios_simulator_build,
        build_android_app,
        build_ios_simulator_app,
        build_ios_app,
      ]
    if: failure()
    steps:
      - run: |
          set -e
          MSG=""
          # Fingerprint failure
          if [[ "${AFTER_FINGERPRINT_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* Fingerprint job failed.\n"
          fi
          # Android build failures
          if [[ "${AFTER_GET_ANDROID_BUILD_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* Failed to get Android build.\n"
          elif [[ "${AFTER_BUILD_ANDROID_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* Android build step failed.\n"
          fi
          # iOS build failures
          if [[ "${AFTER_GET_IOS_SIMULATOR_BUILD_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* Failed to get iOS Simulator build.\n"
          elif [[ "${AFTER_BUILD_IOS_SIMULATOR_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* iOS Simulator build step failed.\n"
          fi
          if [[ "${AFTER_GET_IOS_BUILD_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* Failed to get iOS build.\n"
          elif [[ "${AFTER_BUILD_IOS_STATUS}" == "failure" ]]; then
            MSG+="*‚Ä¢* iOS build step failed.\n"
          fi
          # Send consolidated Slack notification
          curl -X POST -H 'Content-type: application/json' \
            --data "{ \
              \"username\": \"EAS - WORKFLOWS\", \
              \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
              \"channel\": \"task-wan\", \
              \"attachments\": [ \
                { \
                  \"fallback\": \"üö® Build Development Workflow Failed: <https://expo.dev/accounts/nyplex-studio/projects/task-wan/workflows|Check workflows>\", \
                  \"pretext\": \"üö® Build Development Workflow Failed: <https://expo.dev/accounts/nyplex-studio/projects/task-wan/workflows|Check workflows>\", \
                  \"color\": \"#D00000\", \
                  \"fields\": [ \
                    { \
                      \"title\": \"Details\", \
                      \"value\": \"$MSG\", \
                      \"short\": false \
                    } \
                  ] \
                } \
              ] \
            }" \
            "$SLACK_WEBHOOK_URL"
    env:
      AFTER_FINGERPRINT_STATUS: ${{ after.fingerprint.status }}
      AFTER_GET_ANDROID_BUILD_STATUS: ${{ after.get_android_build.status }}
      AFTER_GET_IOS_BUILD_STATUS: ${{ after.get_ios_build.status }}
      AFTER_GET_IOS_SIMULATOR_BUILD_STATUS: ${{ after.get_ios_simulator_build.status }}
      AFTER_BUILD_ANDROID_STATUS: ${{ after.build_android_app.status }}
      AFTER_BUILD_IOS_SIMULATOR_STATUS: ${{ after.build_ios_simulator_app.status }}
      AFTER_BUILD_IOS_STATUS: ${{ after.build_ios_app.status }}

  # 6. Send Android notifications for successful builds
  send_notification_android_build_success:
    after: [build_android_app]
    if: success()
    steps:
      - name: Notify Android Build Success
        run: |
          set -e
          MSG="‚úÖ New Android Development build created.\n"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
            \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
            \"channel\":\"task-wan\"}" \
            "$SLACK_WEBHOOK_URL"
  # 7. Send Android notification if no build was created
  send_notification_android_no_build:
    after: [get_android_build]
    if: ${{ !needs.get_android_build.outputs.build_id }}
    steps:
      - name: Notify No Android Build
        run: |
          set -e
          MSG="‚ö†Ô∏è Android Development build was skipped: existing build with same fingerprints found."
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
            \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
            \"channel\":\"task-wan\"}" \
            "$SLACK_WEBHOOK_URL"

  # 8. Send iOS Simulator notifications for successful builds
  send_notification_ios_simulator_build_success:
    after: [build_ios_simulator_app]
    if: success()
    steps:
      - name: Notify iOS Simulator Build Success
        run: |
          set -e
          MSG="‚úÖ New iOS Simulator Development build created.\n"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
            \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
            \"channel\":\"task-wan\"}" \
            "$SLACK_WEBHOOK_URL"
  # 9. Send iOS Simulator notification if no build was created
  send_notification_ios_simulator_no_build:
    after: [get_ios_simulator_build]
    if: ${{ !needs.get_ios_simulator_build.outputs.build_id }}
    steps:
      - name: Notify No iOS Simulator Build
        run: |
          set -e
          MSG="‚ö†Ô∏è iOS Simulator Development build was skipped: existing build with same fingerprints found."
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
            \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
            \"channel\":\"task-wan\"}" \
            "$SLACK_WEBHOOK_URL"

  # 10. Send iOS notifications for successful builds
  send_notification_ios_build_success:
    after: [build_ios_app]
    if: success()
    steps:
      - name: Notify iOS Build Success
        run: |
          set -e
          MSG="‚úÖ New iOS Development build created.\n"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
            \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
            \"channel\":\"task-wan\"}" \
            "$SLACK_WEBHOOK_URL"
  # 11. Send iOS notification if no build was created
  send_notification_ios_no_build:
    after: [get_ios_build]
    if: ${{ !needs.get_ios_build.outputs.build_id }}
    steps:
      - name: Notify No iOS Build
        run: |
          set -e
          MSG="‚ö†Ô∏è iOS Development build was skipped: existing build with same fingerprints found."
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
            \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
            \"channel\":\"task-wan\"}" \
            "$SLACK_WEBHOOK_URL"
