name: Deploy Production OTA

jobs:
  # 1. Fingerprint job to check if builds already exist
  fingerprint:
    type: fingerprint
    environment: production
    env:
      EXPO_PUBLIC_APP_VARIANT: "production"

  # 2. Fetch Android and iOS in parallel (only if fingerprint succeeds)
  get_android_build:
    after: [fingerprint]
    if: ${{ after.fingerprint.status == 'success' }}
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.android_fingerprint_hash }}
      profile: production

  get_ios_build:
    after: [fingerprint]
    if: ${{ after.fingerprint.status == 'success' }}
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.ios_fingerprint_hash }}
      profile: production

  # 3. Update OTA for Android and iOS in parallel (if builds exist)
  update_android:
    after: [get_android_build]
    if: ${{ after.get_android_build.status == 'success' && after.get_android_build.outputs.build_id }}
    type: update
    params:
      branch: production
      platform: android

  update_ios:
    after: [get_ios_build]
    if: ${{ after.get_ios_build.status == 'success' && after.get_ios_build.outputs.build_id  }}
    type: update
    params:
      branch: production
      platform: ios

  # 4. Single notifier for all failures
  notify_failures:
    after:
      [
        fingerprint,
        get_android_build,
        get_ios_build,
        update_android,
        update_ios,
      ]
    if: failure()
    steps:
      - run: |
          set -e
          MSG=""
          # Fingerprint failure
          if [[ "${AFTER_FINGERPRINT_STATUS}" == "failure" ]]; then
            MSG+="*â€¢* Fingerprint job failed.\n"
          fi
          # Android build failures
          if [[ "${AFTER_GET_ANDROID_BUILD_STATUS}" == "failure" ]]; then
            MSG+="*â€¢* Failed to get Android build.\n"
          fi
          # iOS build failures
          if [[ "${AFTER_GET_IOS_BUILD_STATUS}" == "failure" ]]; then
            MSG+="*â€¢* Failed to get iOS build.\n"
          fi
          # OTA update failures
          if [[ "${AFTER_UPDATE_ANDROID_STATUS}" == "failure" ]]; then
            MSG+="*â€¢* Android Production OTA update failed.\n"
          fi
          if [[ "${AFTER_UPDATE_IOS_STATUS}" == "failure" ]]; then
            MSG+="*â€¢* iOS Production OTA update failed.\n"
          fi
          # Send consolidated Slack notification
          curl -X POST -H 'Content-type: application/json' \
            --data "{ \
              \"username\": \"EAS - WORKFLOWS\", \
              \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
              \"channel\": \"task-wan\", \
              \"attachments\": [ \
                { \
                  \"fallback\": \"ðŸš¨ Publish Production OTA Workflow Failed: <https://expo.dev/accounts/nyplex-studio/projects/task-wan/workflows|Check workflows>\", \
                  \"pretext\": \"ðŸš¨ Publish Production OTA Workflow Failed: <https://expo.dev/accounts/nyplex-studio/projects/task-wan/workflows|Check workflows>\", \
                  \"color\": \"#D00000\", \
                  \"fields\": [ \
                    { \
                      \"title\": \"Details\", \
                      \"value\": \"$MSG\", \
                      \"short\": false \
                    } \
                  ] \
                } \
              ] \
            }" \
            "$SLACK_WEBHOOK_URL"
    env:
      AFTER_FINGERPRINT_STATUS: ${{ after.fingerprint.status }}
      AFTER_GET_ANDROID_BUILD_STATUS: ${{ after.get_android_build.status }}
      AFTER_GET_IOS_BUILD_STATUS: ${{ after.get_ios_build.status }}
      AFTER_UPDATE_ANDROID_STATUS: ${{ after.update_android.status }}
      AFTER_UPDATE_IOS_STATUS: ${{ after.update_ios.status }}

  # 5. Notify Slack about Android OTA update results
  notify_android_results:
    after: [update_android]
    if: success()
    steps:
      - run: |
          set -e
          MSG=""
          if [[ "${AFTER_UPDATE_ANDROID_STATUS}" == "success" ]]; then
            MSG+="ðŸš€ Android OTA update deployed to PRODUCTION.\n"
          fi
          if [[ -n "$MSG" ]]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
              \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
              \"channel\":\"task-wan\"}" \
              "$SLACK_WEBHOOK_URL"
          fi
    env:
      AFTER_UPDATE_ANDROID_STATUS: ${{ after.update_android.status }}

  # 6. Notify Slack about iOS OTA update results
  notify_ios_results:
    after: [update_ios]
    if: success()
    steps:
      - run: |
          set -e
          MSG=""
          if [[ "${AFTER_UPDATE_IOS_STATUS}" == "success" ]]; then
            MSG+="ðŸš€ iOS OTA update deployed to PRODUCTION.\n"
          fi
          if [[ -n "$MSG" ]]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"$MSG\", \"username\": \"EAS - WORKFLOWS\", \
              \"icon_url\": \"https://raw.githubusercontent.com/nyplex/bot-icons/main/expo-icon.png\", \
              \"channel\":\"task-wan\"}" \
              "$SLACK_WEBHOOK_URL"
          fi
    env:
      AFTER_UPDATE_IOS_STATUS: ${{ after.update_ios.status }}
